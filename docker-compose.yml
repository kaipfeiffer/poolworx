version: "3.1"
networks:
  backend:
    driver: bridge
volumes:
  wordpress:
  mysql:
services:
  # variables are located in .env in this directory
  # node:
  #   build: 
  #     context: "./docker/node/"
  #     args:
  #         EXPOSE_PORT: ${EXPOSE_PORT}
  #   environment:
  #     ENV_EXPOSE_PORT: ${EXPOSE_PORT}
  #   ports: 
  #     - "${EXPOSE_PORT}:${EXPOSE_PORT}"
  #   volumes:
  #     - ./src/vite-app:/app

  # standalone instance of the ride-pooling plugin
  wp:
    image: wordpress:5.7.2-php7.3
    restart: always
    ports:
      - ${WP_PORT}:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${DB_ROOT_PASSWORD}
      WORDPRESS_DB_NAME: "${DB_NAME}"
    volumes:
      - wordpress:/var/www/html
      - ../ridepool:/var/www/html/wp-content/plugins/ridepool
      - ../tramp:/var/www/html/wp-content/plugins/ridepool/vendor/kaipfeiffer/tramp
      - /Volumes/ramdisk/Privat/anacoda:/var/www/html/anacoda
      - ${PWD}/config/.htaccess:/var/www/html/.htaccess
    logging:
      options:
        max-size: 2m
    depends_on:
      - db
    networks:
      - backend

  wpcli:
    image: wordpress:cli
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - wordpress:/var/www/html
      - ../ridepool:/var/www/html/wp-content/plugins/ridepool
      - ../tramp:/var/www/html/wp-content/plugins/ridepool/vendor/kaipfeiffer/tramp
      # rewrite settings for multisite
      - ${PWD}/config/.htaccess:/var/www/html/.htaccess
      # settings for the sites to create
      - ${PWD}/config/wp-multisite-settings.php:/tmp/wp-multisite-settings.php
      # script for site creation
      - ${PWD}/config/wp-multisite-setup.php:/tmp/wp-multisite-setup.php
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${DB_ROOT_PASSWORD}
      WORDPRESS_DB_NAME: "${DB_NAME}"
    depends_on:
      - db
      - wp
    links:
      - db
    networks:
      - backend
    user: xfs
    # command to install the multisite wordpress and the available sites. if port 80 is used, the port is ommitted in the url parameter
    command: >
      /bin/sh -c '
      sleep 20;
      if [ 80 = "${WP_PORT}" ] ; then \
       wp core multisite-install --path="/var/www/html" --url="${WP_PROTOCOL}://${WP_HOST}" --title="${WP_MAIN_TITLE}" --admin_user=admin --admin_password=${WP_ADMIN_PASS} --admin_email=${WP_EMAIL};
      else \
       wp core multisite-install --path="/var/www/html" --url="${WP_PROTOCOL}://${WP_HOST}:${WP_PORT}" --title="${WP_MAIN_TITLE}" --admin_user=admin --admin_password=${WP_ADMIN_PASS} --admin_email=${WP_EMAIL}; \
      fi;
      wp --require=/tmp/wp-multisite-setup.php --url="${WP_PROTOCOL}://${WP_HOST}:${WP_PORT}" multisite install ${WP_PROTOCOL} ${WP_HOST} ${WP_PORT}
      '

  # mysql container for all wp containers
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    command:
      [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
      ]
    volumes:
      - mysql:/var/lib/mysql
      # - ./docker/mysql/database-setup.sh:/docker-entrypoint-initdb.d/database-setup.sh
    networks:
      - backend

  # database management
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8389:80
    environment:
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=128M
    networks:
      - backend
