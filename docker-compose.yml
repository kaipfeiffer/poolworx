version: "3.1"
networks:
  backend:
    driver: bridge
volumes:
  wp-vol1:
  wp-vol2:
  # wp3-volume:
services:
  # variables are located in .env in this directory
  node:
    build: 
      context: "./docker/node/"
      args:
          EXPOSE_PORT: ${EXPOSE_PORT}
    environment:
      ENV_EXPOSE_PORT: ${EXPOSE_PORT}
    ports: 
      - "${EXPOSE_PORT}:${EXPOSE_PORT}"
    volumes:
      - ./src/vite-app:/app

  # standalone instance of the ride-pooling plugin
  wp1:
    # image: wordpress
    build: ./docker/wordpress/
    restart: always
    ports:
      - ${WP1_PORT}:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${DB_ROOT_PASSWORD}
      WORDPRESS_DB_NAME: "${DB_NAME}2"
    volumes:
      - wp-vol1:/var/www/html
    logging:
      options:
        max-size: 2m
    depends_on:
      - db
    networks:
      - backend

  # wp-client for wp1 container
  wpcli1:
    image: wordpress:cli
    # build: ./docker/wpcli/
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - wp-vol1:/var/www/html
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${DB_ROOT_PASSWORD}
      WORDPRESS_DB_NAME: "${DB_NAME}1"
    depends_on:
      - db
      - wp1
    links:
      - db
    networks:
      - backend
    user: xfs
    command: >
      /bin/sh -c '
      sleep 10;
      wp core install --path="/var/www/html" --url="http://localhost:${WP1_PORT}" --title="${WP1_TITLE}" --admin_user=admin --admin_password=${WP_ADMIN_PASS} --admin_email=${WP_EMAIL}
      '

  # standalone instance of the ride-pooling plugin
  wp2:
    # image: wordpress
    build: ./docker/wordpress/
    restart: always
    ports:
      - ${WP2_PORT}:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${DB_ROOT_PASSWORD}
      WORDPRESS_DB_NAME: "${DB_NAME}2"
    volumes:
      - wp-vol2:/var/www/html
    logging:
      options:
        max-size: 2m
    depends_on:
      - db
    networks:
      - backend

  # wp-client for wp1 container
  wpcli2:
    image: wordpress:cli
    # build: ./docker/wpcli/
    volumes:
      - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - wp-vol2:/var/www/html
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: ${DB_ROOT_PASSWORD}
      WORDPRESS_DB_NAME: "${DB_NAME}2"
    depends_on:
      - db
      - wp2
    links:
      - db
    networks:
      - backend
    user: xfs
    command: >
      /bin/sh -c '
      sleep 10;
      wp core install --path="/var/www/html" --url="http://localhost:${WP2_PORT}" --title="${WP2_TITLE}" --admin_user=admin --admin_password=${WP_ADMIN_PASS} --admin_email=${WP_EMAIL}
      '

  # mysql container for all wp containers
  db:
    # image: mysql:5.7
    build: ./docker/mysql/
    restart: always
    environment:
      APP_MYSQL_USER: ${DB_USER}
      APP_MYSQL_PASSWORD: ${DB_PASSWORD}
      APP_MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      # MYSQL_DATABASE: database creation happens in database-setup.sh
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    command:
      [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
      ]
    volumes:
      - ./db/:/var/lib/mysql
      - ./docker/mysql/database-setup.sh:/docker-entrypoint-initdb.d/database-setup.sh
    networks:
      - backend

  # database management
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8389:80
    environment:
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=128M
    networks:
      - backend
